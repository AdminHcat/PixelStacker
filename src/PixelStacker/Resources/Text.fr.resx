<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action_Add_0" xml:space="preserve">
    <value>Ajouter "{0}"</value>
  </data>
  <data name="Action_DisableQuantizer" xml:space="preserve">
    <value>Désactiver le quantificateur</value>
  </data>
  <data name="Action_EnableQuantizer" xml:space="preserve">
    <value>Activer le quantificateur</value>
  </data>
  <data name="Action_Filter" xml:space="preserve">
    <value>Filtre</value>
  </data>
  <data name="Action_Remove_0" xml:space="preserve">
    <value>Supprimer "{0}"</value>
  </data>
  <data name="Action_Save" xml:space="preserve">
    <value>Sauvegarder</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Êtes-vous sûr?</value>
  </data>
  <data name="DDL_SelectProfile" xml:space="preserve">
    <value>Choisissez un profil</value>
  </data>
  <data name="Error_GlassRequiredForMultiLayer" xml:space="preserve">
    <value>Au moins un matériau en verre doit être activé lorsque vous choisissez d'exiger plusieurs couches.</value>
  </data>
  <data name="Error_NeedMoreRam" xml:space="preserve">
    <value>Pas assez de mémoire. Veuillez réessayer ou réduire la taille de l'image si le problème persiste.</value>
  </data>
  <data name="Error_NonGlassRequired" xml:space="preserve">
    <value>Au moins un matériau sans verre doit être sélectionné.</value>
  </data>
  <data name="Error_OneMaterialRequired" xml:space="preserve">
    <value>Au moins un matériau doit être activé à tout moment.</value>
  </data>
  <data name="Error_SomethingIsWrong" xml:space="preserve">
    <value>Quelque chose cloche ici.</value>
  </data>
  <data name="MaterialSelect_ColorProfile" xml:space="preserve">
    <value>Profil de couleur</value>
  </data>
  <data name="MaterialSelect_IsMultiLayer" xml:space="preserve">
    <value>Activer la deuxième couche</value>
  </data>
  <data name="MaterialSelect_IsMultiLayerRequired" xml:space="preserve">
    <value>Nécessite une deuxième couche</value>
  </data>
  <data name="MaterialSelect_IsSideView" xml:space="preserve">
    <value>Vue de côté</value>
  </data>
  <data name="MaterialSelect_Title" xml:space="preserve">
    <value>Sélection des matériaux</value>
  </data>
  <data name="OtherOptions_ConfirmFactoryReset" xml:space="preserve">
    <value>Voulez-vous vraiment réinitialiser toutes les options du PixelStacker aux paramètres par défaut? Inclut les matériaux, les tailles, les états d'affichage, les options de rendu, etc.</value>
  </data>
  <data name="OtherOptions_Title" xml:space="preserve">
    <value>Autres options</value>
  </data>
  <data name="PreRenderOptions_Algorithm" xml:space="preserve">
    <value>Algorithme</value>
  </data>
  <data name="PreRenderOptions_Algorithm_Tooltip" xml:space="preserve">
    <value>Différents algorithmes utilisent différentes stratégies pour
combiner les couleurs ensemble. Certains utilisent des seaux de couleur,
d'autres utilisent la distance de localisation par rapport aux couleurs voisines. Essayer
tous et décidez lequel est votre préféré.</value>
  </data>
  <data name="PreRenderOptions_ColorCache" xml:space="preserve">
    <value>Cache de couleurs</value>
  </data>
  <data name="PreRenderOptions_ColorCacheSize" xml:space="preserve">
    <value>Taille du cache de couleurs</value>
  </data>
  <data name="PreRenderOptions_ColorCacheSize_Tooltip" xml:space="preserve">
    <value>Des valeurs plus petites sont plus rapides mais moins précises.
Les valeurs plus élevées sont plus lentes mais plus précises.</value>
  </data>
  <data name="PreRenderOptions_ColorCount" xml:space="preserve">
    <value>Nombre de couleurs</value>
  </data>
  <data name="PreRenderOptions_ColorCount_Tooltip" xml:space="preserve">
    <value>Nombre maximum de couleurs.</value>
  </data>
  <data name="PreRenderOptions_Dither" xml:space="preserve">
    <value>Tremblement</value>
  </data>
  <data name="PreRenderOptions_Dither_Tooltip" xml:space="preserve">
    <value>Certaines personnes aiment tergiverser.
Je ne. Je ne fais jamais. je déteste
hésitation. Mais bon, tu le fais.</value>
  </data>
  <data name="PreRenderOptions_Parallel" xml:space="preserve">
    <value>Parallèle</value>
  </data>
  <data name="PreRenderOptions_Parallel_Tooltip" xml:space="preserve">
    <value>Accélérez le processus de quantification en prenant
avantage d'un processeur multicœur.

Des valeurs plus basses = plus stable
Des valeurs plus élevées = plus rapide
Valeurs super élevées = problèmes possibles</value>
  </data>
  <data name="PreRenderOptions_QuantizerSettings" xml:space="preserve">
    <value>Paramètres du quantificateur</value>
  </data>
  <data name="Progress_CompilingColorMap" xml:space="preserve">
    <value>Compilation de la carte des couleurs.</value>
  </data>
  <data name="Progress_Finished" xml:space="preserve">
    <value>Fini.</value>
  </data>
  <data name="Progress_PreparingCanvasForTextures" xml:space="preserve">
    <value>Préparation de la toile pour la peinture.</value>
  </data>
  <data name="Progress_QuantizingImage" xml:space="preserve">
    <value>Quantification de l'image</value>
  </data>
</root>